<?php

/**
 * BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $short_description
 * @property clob $content
 * @property string $picture
 * @property boolean $is_published
 * @property timestamp $published_at
 * @property integer $author_id
 * @property boolean $display_to_homepage
 * @property Doctrine_Collection $Keywords
 * @property sfGuardUser $Author
 * @property Doctrine_Collection $ArticleKeywords
 * @property Doctrine_Collection $Comments
 * 
 * @method string              getTitle()               Returns the current record's "title" value
 * @method string              getShortDescription()    Returns the current record's "short_description" value
 * @method clob                getContent()             Returns the current record's "content" value
 * @method string              getPicture()             Returns the current record's "picture" value
 * @method boolean             getIsPublished()         Returns the current record's "is_published" value
 * @method timestamp           getPublishedAt()         Returns the current record's "published_at" value
 * @method integer             getAuthorId()            Returns the current record's "author_id" value
 * @method boolean             getDisplayToHomepage()   Returns the current record's "display_to_homepage" value
 * @method Doctrine_Collection getKeywords()            Returns the current record's "Keywords" collection
 * @method sfGuardUser         getAuthor()              Returns the current record's "Author" value
 * @method Doctrine_Collection getArticleKeywords()     Returns the current record's "ArticleKeywords" collection
 * @method Doctrine_Collection getComments()            Returns the current record's "Comments" collection
 * @method Article             setTitle()               Sets the current record's "title" value
 * @method Article             setShortDescription()    Sets the current record's "short_description" value
 * @method Article             setContent()             Sets the current record's "content" value
 * @method Article             setPicture()             Sets the current record's "picture" value
 * @method Article             setIsPublished()         Sets the current record's "is_published" value
 * @method Article             setPublishedAt()         Sets the current record's "published_at" value
 * @method Article             setAuthorId()            Sets the current record's "author_id" value
 * @method Article             setDisplayToHomepage()   Sets the current record's "display_to_homepage" value
 * @method Article             setKeywords()            Sets the current record's "Keywords" collection
 * @method Article             setAuthor()              Sets the current record's "Author" value
 * @method Article             setArticleKeywords()     Sets the current record's "ArticleKeywords" collection
 * @method Article             setComments()            Sets the current record's "Comments" collection
 * 
 * @package    esftt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('short_description', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('picture', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_published', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             'default' => false,
             ));
        $this->hasColumn('published_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('display_to_homepage', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Keyword as Keywords', array(
             'refClass' => 'ArticleKeyword',
             'local' => 'article_id',
             'foreign' => 'keyword_id'));

        $this->hasOne('sfGuardUser as Author', array(
             'local' => 'author_id',
             'foreign' => 'id'));

        $this->hasMany('ArticleKeyword as ArticleKeywords', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}