<?php

/**
 * BaseBigTopic
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $subtitle
 * @property boolean $is_private
 * @property integer $team_id
 * @property integer $category_id
 * @property Team $Team
 * @property BigTopicCategory $Category
 * @property Doctrine_Collection $Topics
 * 
 * @method string              getTitle()       Returns the current record's "title" value
 * @method string              getSubtitle()    Returns the current record's "subtitle" value
 * @method boolean             getIsPrivate()   Returns the current record's "is_private" value
 * @method integer             getTeamId()      Returns the current record's "team_id" value
 * @method integer             getCategoryId()  Returns the current record's "category_id" value
 * @method Team                getTeam()        Returns the current record's "Team" value
 * @method BigTopicCategory    getCategory()    Returns the current record's "Category" value
 * @method Doctrine_Collection getTopics()      Returns the current record's "Topics" collection
 * @method BigTopic            setTitle()       Sets the current record's "title" value
 * @method BigTopic            setSubtitle()    Sets the current record's "subtitle" value
 * @method BigTopic            setIsPrivate()   Sets the current record's "is_private" value
 * @method BigTopic            setTeamId()      Sets the current record's "team_id" value
 * @method BigTopic            setCategoryId()  Sets the current record's "category_id" value
 * @method BigTopic            setTeam()        Sets the current record's "Team" value
 * @method BigTopic            setCategory()    Sets the current record's "Category" value
 * @method BigTopic            setTopics()      Sets the current record's "Topics" collection
 * 
 * @package    esftt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBigTopic extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('f_big_topic');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('subtitle', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1000,
             ));
        $this->hasColumn('is_private', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('team_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Team', array(
             'local' => 'team_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('BigTopicCategory as Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Topic as Topics', array(
             'local' => 'id',
             'foreign' => 'big_topic_id'));
    }
}