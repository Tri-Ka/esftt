<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $article_id
 * @property integer $parent_id
 * @property integer $author_id
 * @property string $content
 * @property Article $Article
 * @property sfGuardUser $Author
 * 
 * @method integer     getArticleId()  Returns the current record's "article_id" value
 * @method integer     getParentId()   Returns the current record's "parent_id" value
 * @method integer     getAuthorId()   Returns the current record's "author_id" value
 * @method string      getContent()    Returns the current record's "content" value
 * @method Article     getArticle()    Returns the current record's "Article" value
 * @method sfGuardUser getAuthor()     Returns the current record's "Author" value
 * @method Comment     setArticleId()  Sets the current record's "article_id" value
 * @method Comment     setParentId()   Sets the current record's "parent_id" value
 * @method Comment     setAuthorId()   Sets the current record's "author_id" value
 * @method Comment     setContent()    Sets the current record's "content" value
 * @method Comment     setArticle()    Sets the current record's "Article" value
 * @method Comment     setAuthor()     Sets the current record's "Author" value
 * 
 * @package    esftt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('article_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('content', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Article', array(
             'local' => 'article_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as Author', array(
             'local' => 'author_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}