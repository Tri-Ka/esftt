<?php

/**
 * BaseEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property clob $description
 * @property string $picture
 * @property DateTime $date_from
 * @property DateTime $date_to
 * 
 * @method string   getName()        Returns the current record's "name" value
 * @method clob     getDescription() Returns the current record's "description" value
 * @method string   getPicture()     Returns the current record's "picture" value
 * @method DateTime getDateFrom()    Returns the current record's "date_from" value
 * @method DateTime getDateTo()      Returns the current record's "date_to" value
 * @method Event    setName()        Sets the current record's "name" value
 * @method Event    setDescription() Sets the current record's "description" value
 * @method Event    setPicture()     Sets the current record's "picture" value
 * @method Event    setDateFrom()    Sets the current record's "date_from" value
 * @method Event    setDateTo()      Sets the current record's "date_to" value
 * 
 * @package    esftt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('picture', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('date_from', 'DateTime', null, array(
             'type' => 'DateTime',
             ));
        $this->hasColumn('date_to', 'DateTime', null, array(
             'type' => 'DateTime',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}