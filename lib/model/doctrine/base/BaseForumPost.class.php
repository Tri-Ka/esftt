<?php

/**
 * BaseForumPost
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $author_id
 * @property integer $topic_id
 * @property clob $content
 * @property sfGuardUser $Author
 * @property ForumTopic $Topic
 * 
 * @method integer     getAuthorId()  Returns the current record's "author_id" value
 * @method integer     getTopicId()   Returns the current record's "topic_id" value
 * @method clob        getContent()   Returns the current record's "content" value
 * @method sfGuardUser getAuthor()    Returns the current record's "Author" value
 * @method ForumTopic  getTopic()     Returns the current record's "Topic" value
 * @method ForumPost   setAuthorId()  Sets the current record's "author_id" value
 * @method ForumPost   setTopicId()   Sets the current record's "topic_id" value
 * @method ForumPost   setContent()   Sets the current record's "content" value
 * @method ForumPost   setAuthor()    Sets the current record's "Author" value
 * @method ForumPost   setTopic()     Sets the current record's "Topic" value
 * 
 * @package    esftt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseForumPost extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('forum_post');
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('topic_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as Author', array(
             'local' => 'author_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ForumTopic as Topic', array(
             'local' => 'topic_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}