<?php

/**
 * BaseTeam
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $appearance_order
 * @property Doctrine_Collection $Users
 * @property Doctrine_Collection $UserTeams
 * @property Doctrine_Collection $BigTopics
 * 
 * @method string              getName()             Returns the current record's "name" value
 * @method integer             getAppearanceOrder()  Returns the current record's "appearance_order" value
 * @method Doctrine_Collection getUsers()            Returns the current record's "Users" collection
 * @method Doctrine_Collection getUserTeams()        Returns the current record's "UserTeams" collection
 * @method Doctrine_Collection getBigTopics()        Returns the current record's "BigTopics" collection
 * @method Team                setName()             Sets the current record's "name" value
 * @method Team                setAppearanceOrder()  Sets the current record's "appearance_order" value
 * @method Team                setUsers()            Sets the current record's "Users" collection
 * @method Team                setUserTeams()        Sets the current record's "UserTeams" collection
 * @method Team                setBigTopics()        Sets the current record's "BigTopics" collection
 * 
 * @package    esftt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTeam extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('team');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('appearance_order', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardUser as Users', array(
             'refClass' => 'UserTeam',
             'local' => 'team_id',
             'foreign' => 'user_id'));

        $this->hasMany('UserTeam as UserTeams', array(
             'local' => 'id',
             'foreign' => 'team_id'));

        $this->hasMany('ForumBigTopic as BigTopics', array(
             'local' => 'id',
             'foreign' => 'team_id'));
    }
}