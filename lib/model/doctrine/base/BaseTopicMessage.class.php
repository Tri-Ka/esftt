<?php

/**
 * BaseTopicMessage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property clob $message
 * @property integer $author_id
 * @property integer $topic_id
 * @property Topic $Topic
 * @property sfGuardUser $Author
 * 
 * @method clob         getMessage()   Returns the current record's "message" value
 * @method integer      getAuthorId()  Returns the current record's "author_id" value
 * @method integer      getTopicId()   Returns the current record's "topic_id" value
 * @method Topic        getTopic()     Returns the current record's "Topic" value
 * @method sfGuardUser  getAuthor()    Returns the current record's "Author" value
 * @method TopicMessage setMessage()   Sets the current record's "message" value
 * @method TopicMessage setAuthorId()  Sets the current record's "author_id" value
 * @method TopicMessage setTopicId()   Sets the current record's "topic_id" value
 * @method TopicMessage setTopic()     Sets the current record's "Topic" value
 * @method TopicMessage setAuthor()    Sets the current record's "Author" value
 * 
 * @package    esftt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTopicMessage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('f_topic_message');
        $this->hasColumn('message', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('topic_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Topic', array(
             'local' => 'topic_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as Author', array(
             'local' => 'author_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}