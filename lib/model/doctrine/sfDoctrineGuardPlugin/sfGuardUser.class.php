<?php

/**
 * sfGuardUser
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    esftt
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class sfGuardUser extends PluginsfGuardUser
{

	public function __toString()
	{
		if(null == $this->getFirstName() || null == $this->getLastName())
		{
			return $this->getUsername();

		} else {

			return $this->getFirstName() . ' ' . $this->getLastName();

		}
	}

	public function getAvatarPath()
    {
        if (null == $this->getAvatar()) {
            return public_path(DIRECTORY_SEPARATOR . 'images' . DIRECTORY_SEPARATOR . 'avatar-male.png');
        } else {
            //return sfConfig::get('sf_upload_dir') . DIRECTORY_SEPARATOR . $this->getAvatar();        }
            return public_path(DIRECTORY_SEPARATOR . 'uploads' . DIRECTORY_SEPARATOR . 'avatars' . DIRECTORY_SEPARATOR . $this->getAvatar());
        }
    }

    /**
     * Retrieve picture path
     *
     * @return string avatar path
     */
    public function retrievePictureUrl($web = true)
    {

        $logo = $this->getAvatar();

        if (null == $logo) {
            //return null;
            return  sfConfig::get('public_path') . '/images/avatar-male.png';
        }

        $dirSep = '/';

        return $this->retrieveHashedPictureDirectory($web) . $dirSep . $logo;
    }

    public function retrievePictureWidth()
    {
        $size = getimagesize($this->retrievePictureUrl());
        return $size[0];
    }
    public function retrievePictureHeight()
    {
        $size = getimagesize($this->retrievePictureUrl());
        return $size[1];
    }

     /**
     * Retrieve picture directory only
     *
     * @return string avatar directory only
     */
    public function retrieveHashedPictureDirectory($web = true)
    {
        if ($web) {
            $dirSep = '/';
            $dirPrefix = str_replace(sfConfig::get('sf_web_dir'), '', sfConfig::get('sf_upload_dir'));
            sfContext::getInstance()->getConfiguration()->loadHelpers(array('Url'));

            return public_path(implode($dirSep, array_merge_recursive(array($dirPrefix, 'users'), str_split($this->getId()))), true);
        } else {
            $dirSep = DIRECTORY_SEPARATOR;
            $dirPrefix = sfConfig::get('sf_upload_dir');

            return implode($dirSep, array_merge_recursive(array($dirPrefix, 'users'), str_split($this->getId())));
        }
    }

    public function isInTeam($team_id)
    {
        return 0 < UserTeamTable::getInstance()->findByDql('user_id = ? AND team_id = ?', array($this->getId(), $team_id))->count();
    }
}
