<?php

/**
 * sfGuardUserTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class sfGuardUserTable extends PluginsfGuardUserTable
{
    /**
     * Returns an instance of this class.
     *
     * @return object sfGuardUserTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('sfGuardUser');
    }

    public function retrieveByUsername($username, $isActive = true)
    {
        $query = Doctrine_Core::getTable('sfGuardUser')->createQuery('u')
            ->where('u.username = ? OR u.email_address = ?', array($username, $username))
          ->addWhere('u.is_active = ?', $isActive)
        ;

        return $query->fetchOne();
    }


    public function findAvailableBySessionId($session_id)
    {

    	$q = $this->createQuery('u')
    	->innerJoin('u.CompetitionSessionDisponibility csd')
    	->andWhere('csd.is_available = ?', array(true));

    	return $q->execute();

    }

    public function findUnAvailableBySessionId($session_id)
    {

    	$q = $this->createQuery('u')
    	->innerJoin('u.CompetitionSessionDisponibility csd')
    	->andWhere('csd.is_available = ?', array(false));

    	return $q->execute();

    }

    public function findUsersWithoutTeam($groupIds = null)
    {
        $q = $this->createQuery('u')
        ->leftJoin('u.Teams t')
        ->andWhere('t.id IS NULL');
        
        if (null !== $groupIds) {
            $q->leftJoin('u.Groups g')
            ->andWhere('g.id IN ?', array($groupIds));    
        }
        

        return $q->execute();
    }
}